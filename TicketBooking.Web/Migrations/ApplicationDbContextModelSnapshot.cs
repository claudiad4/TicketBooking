// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBooking.Repositories;

#nullable disable

namespace TicketBooking.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketBooking.Entities.Koncert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KoncertImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaksymalnaIloscSiedzen")
                        .HasColumnType("int");

                    b.Property<string>("NazwaKoncertu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wykonawca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KoncertInfo");
                });

            modelBuilder.Entity("TicketBooking.Entities.MiejscaDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KoncertID")
                        .HasColumnType("int");

                    b.Property<int>("NumerMiejsca")
                        .HasColumnType("int");

                    b.Property<int>("StatusMiejsca")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KoncertID");

                    b.ToTable("MiejscaKoncertDetails");
                });

            modelBuilder.Entity("TicketBooking.Entities.MiejscaDetails", b =>
                {
                    b.HasOne("TicketBooking.Entities.Koncert", "Koncert")
                        .WithMany("SiedzeniaDetails")
                        .HasForeignKey("KoncertID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Koncert");
                });

            modelBuilder.Entity("TicketBooking.Entities.Koncert", b =>
                {
                    b.Navigation("SiedzeniaDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
