@using TicketBooking.Entities
using TicketBooking.Entities;
@model TicketBooking.Web.ViewModels.MiejscaVM.CreateMiejscaViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Utwórz nowe miejsce</h1>

<h4>CreateMiejscaModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NumerMiejsca" class="control-label"></label>
                <input asp-for="NumerMiejsca" class="form-control" />
                <span asp-validation-for="NumerMiejsca" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="KoncertID" class="control-label"></label>
                <select asp-for="KoncertID" asp-items="ViewBag.koncertyList" class="form-control">
                    <option selected disabled>Wybierz koncert</option>
                </select>
                <span asp-validation-for="KoncertID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StatusMiejsca" class="control-label"></label>
                <select asp-for="StatusMiejsca" asp-items="Html.GetEnumSelectList<StatusMiejsca>()" class="form-control"></select>
                <span asp-validation-for="StatusMiejsca" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
